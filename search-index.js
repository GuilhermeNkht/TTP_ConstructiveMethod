var searchIndex = new Map(JSON.parse('[["ttpgen",{"t":"CCCHCCCFNNNNNNNNNNNONOOOOOONNNNNNFFFFFFNNNNNNNNNNNNOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNOOONNNNNNOOONNNNNONNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHFFFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONNNNNNNNOOHONNNNONNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNN","n":["cli","data_set","logging","main","solution","statistics","xml_manager","Cli","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","input","into","log_enabled","output_permutations","output_solutions","permutations","save","seed","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","CapacityConstraints","Distance","Rawdata","SeparationConstraints","Slot","Team","borrow","","","","","","borrow_mut","","","","","","c_intp","c_max","","c_min","","c_mode1","c_mode2","c_penalty","","c_team_groups","c_team_groups1","c_team_groups2","c_type","","capacity_constraints","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","deserialize","","","","","","dist","distances","eq","","","fmt","","","","","","from","","","","","","hash","","","id","","instance_name","into","","","","","","league","name","","new","","","","","separation_constraints","serialize","","","","","","slots","team1","team2","team_groups","teams","to_owned","","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","init_logger","Game","Permutations","ProgressBarLog","Solution","bar","borrow","","","","borrow_mut","","","","check_constraints","clone","","clone_into","","clone_to_uninit","","deserialize","","eq","","evaluate_objective","evaluate_solution","finish","fmt","","from","","","","generate_all_solutions","generate_distances","generate_florian_solution","generate_random_permutations","generate_solution","generate_traveling_distance_matrix","has_duplicate_solutions","hash","","home_game","id","inc","instance_name","into","","","","load_solutions","log_solution","new","","opponent","permutations","save_to_file","seed","serialize","","","set_message","solution","solution_to_string","to_owned","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","Statistics","borrow","borrow_mut","from","generate_statistics","into","mean","median","min_max","plot_histogram","quartiles","std_dev","try_from","try_into","type_id","variance","vzip","XmlManager","borrow","borrow_mut","from","into","parse_capacity","parse_distance","parse_separation","parse_slot","parse_team","read_xml","try_from","try_into","type_id","vzip"],"q":[[0,"ttpgen"],[7,"ttpgen::cli"],[33,"ttpgen::data_set"],[169,"ttpgen::logging"],[170,"ttpgen::solution"],[252,"ttpgen::statistics"],[269,"ttpgen::xml_manager"],[284,"clap_builder::builder::command"],[285,"core::fmt"],[286,"clap_builder::parser::matches::arg_matches"],[287,"clap_builder"],[288,"core::result"],[289,"clap_builder::util::id"],[290,"core::option"],[291,"alloc::string"],[292,"core::any"],[293,"alloc::vec"],[294,"serde_core::de"],[295,"core::hash"],[296,"serde_core::ser"],[297,"indicatif::progress"],[298,"std::io::error"],[299,"roxmltree"]],"i":"````````j000000000000000000000000``````BjBnC`CbBdBf5432101101011100111055432105432105432105432104543254321054321043232554321033243210554321054435543210543210543210543210543210`````Cn0DfDlDb32100202020202000320321000000002020313210003021`1210300203210321032103210`Ef000000000000000`Eh0000000000000","f":"```{{}b}````{dd}0{f{{f{c}}}{}}{{{f{h}}}{{f{hc}}}{}}{{}d}0{{{f{j}}{f{hl}}}n}{cc{}}{{{f{A`}}}{{Ad{jAb}}}}{{{f{hA`}}}{{Ad{jAb}}}}{{}{{Ah{Af}}}}{jAj}{{}c{}}{jAl}22{jAn}1{jB`}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{fBb}{{{f{hj}}{f{A`}}}{{Ad{bAb}}}}{{{f{hj}}{f{hA`}}}{{Ad{bAb}}}}{{}c{}}``````{f{{f{c}}}{}}00000{{{f{h}}}{{f{hc}}}{}}00000{BdAn}0{BfAn}10{BdBh}{BdAj}322330{BfAj}{BjBl}{{{f{Bj}}}Bj}{{{f{Bn}}}Bn}{{{f{C`}}}C`}{{{f{Cb}}}Cb}{{{f{Bd}}}Bd}{{{f{Bf}}}Bf}{{f{f{hc}}}b{}}00000{{fCd}b}00000{c{{Ad{Bj}}}Cf}{c{{Ad{Bn}}}Cf}{c{{Ad{C`}}}Cf}{c{{Ad{Cb}}}Cf}{c{{Ad{Bd}}}Cf}{c{{Ad{Bf}}}Cf}{BnAn}?{{{f{Bn}}{f{Bn}}}Al}{{{f{C`}}{f{C`}}}Al}{{{f{Cb}}{f{Cb}}}Al}{{{f{Bj}}{f{hl}}}n}{{{f{Bn}}{f{hl}}}n}{{{f{C`}}{f{hl}}}n}{{{f{Cb}}{f{hl}}}n}{{{f{Bd}}{f{hl}}}n}{{{f{Bf}}{f{hl}}}n}{cc{}}00000{{{f{Bn}}{f{hc}}}bCh}{{{f{C`}}{f{hc}}}bCh}{{{f{Cb}}{f{hc}}}bCh}{C`An}{CbAn}{BjAj}{{}c{}}000003{C`Aj}{CbAj}{{}Bn}{{}C`}{{}Cb}{{}Bd}{{}Bf}{BjBl}{{{f{Bj}}c}AdCj}{{{f{Bn}}c}AdCj}{{{f{C`}}c}AdCj}{{{f{Cb}}c}AdCj}{{{f{Bd}}c}AdCj}{{{f{Bf}}c}AdCj}6{BnAn}0{C`An}8{fc{}}00000{c{{Ad{e}}}{}{}}00000{{}{{Ad{c}}}{}}00000{fBb}00000{{}c{}}00000{{{f{Cl}}Al}b}````{CnD`}{f{{f{c}}}{}}000{{{f{h}}}{{f{hc}}}{}}000{{{f{Bj}}{f{Db}}}{{Dd{AnAnAl}}}}{{{f{Df}}}Df}{{{f{Db}}}Db}{{f{f{hc}}}b{}}0{{fCd}b}0{c{{Ad{Df}}}Cf}{c{{Ad{Db}}}Cf}{{{f{Df}}{f{Df}}}Al}{{{f{Db}}{f{Db}}}Al}{{{f{{Bl{{Bl{An}}}}}}{f{Db}}}An}{{{f{Bj}}{f{{Bl{{Bl{An}}}}}}{f{Db}}}{{Dd{AnAnAnAl}}}}{{{f{Cn}}}b}{{{f{Df}}{f{hl}}}n}{{{f{Db}}{f{hl}}}n}{cc{}}000{{{f{Bj}}{f{{Bl{{Bl{An}}}}}}{Bl{{Bl{An}}}}{f{Cl}}Al}{{Dd{{Bl{Db}}{Bl{Dh}}}}}}{{{Bl{Db}}{f{Bj}}{f{{Bl{{Bl{An}}}}}}}{{Bl{Dh}}}}{{{f{Bj}}DjAl}Db}{{{f{Bj}}AnB`{f{Cl}}Al}{{Bl{{Bl{An}}}}}}{{{f{Bj}}{f{{Bl{C`}}}}DjAlAn}Db}{{{f{Bj}}}{{Bl{{Bl{An}}}}}}{{{f{{Bl{Db}}}}}Al}{{{f{Df}}{f{hc}}}bCh}{{{f{Db}}{f{hc}}}bCh}{DfAl}{DbAn}>{DlAj}{{}c{}}000{{{f{Cl}}}{{Bl{Db}}}}{{{f{Db}}{f{Bj}}{f{{Bl{{Bl{An}}}}}}}An}{B`Cn}{{{f{Bj}}}Db}{DfAn}{DlBl}{{{f{c}}{f{Cl}}}{{Dn{b}}}E`}{DlB`}{{{f{Df}}c}AdCj}{{{f{Dl}}c}AdCj}{{{f{Db}}c}AdCj}{{{f{Cn}}{f{Cl}}}b}{DbBl}{{{f{Db}}{f{Bj}}}Aj}{fc{}}0{c{{Ad{e}}}{}{}}000{{}{{Ad{c}}}{}}000{fBb}000{{}c{}}000`{f{{f{c}}}{}}{{{f{h}}}{{f{hc}}}{}}{cc{}}{{{f{{Bl{Dh}}}}}b}{{}c{}}{{{f{{Bl{Dh}}}}}Eb}0{{{f{{Bl{Dh}}}}}{{Dd{DhDh}}}}{{{f{{Bl{Dh}}}}{f{Cl}}}b}{{{f{{Bl{Dh}}}}}{{Dd{EbEbEb}}}}3<;:39`8764{{{f{Ed}}}Bd}{{{f{Ed}}}Bn}{{{f{Ed}}}Bf}{{{f{Ed}}}Cb}{{{f{Ed}}}C`}{{{f{Cl}}}Bj}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{fBb}{{}c{}}","D":"Nb","p":[[1,"unit"],[5,"Command",284],[1,"reference",null,null,1],[0,"mut"],[5,"Cli",7],[5,"Formatter",285],[8,"Result",285],[5,"ArgMatches",286],[8,"Error",287],[6,"Result",288,null,1],[5,"Id",289],[6,"Option",290,null,1],[5,"String",291],[1,"bool"],[1,"i32"],[1,"u64"],[5,"TypeId",292],[5,"CapacityConstraints",33],[5,"SeparationConstraints",33],[1,"char"],[5,"Rawdata",33],[5,"Vec",293],[5,"Distance",33],[5,"Team",33],[5,"Slot",33],[1,"u8"],[10,"Deserializer",294],[10,"Hasher",295],[10,"Serializer",296],[1,"str"],[5,"ProgressBarLog",170],[5,"ProgressBar",297],[5,"Solution",170],[1,"tuple",null,null,1],[5,"Game",170],[1,"i128"],[1,"usize"],[5,"Permutations",170],[8,"Result",298],[10,"Serialize",296],[1,"f64"],[5,"Node",299],[5,"Statistics",252],[5,"XmlManager",269]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKsAFwAAAAcACQAGABEAAgAcAAUAKAALAEMAFwBdAAgAbAACAIEABQCMAB0ArwAIALkACQDGAAEA0wADANgAAADhAAEA5AADAOkAAADrABQACQECAA0BAAAPAQEAGQEDAA==","P":[[10,"T"],[12,""],[15,"T"],[16,""],[20,"U"],[21,""],[27,"U,T"],[28,"U"],[29,""],[32,"V"],[39,"T"],[51,""],[72,"T"],[78,""],[84,"__D"],[90,""],[101,"T"],[107,"__H"],[110,""],[113,"U"],[119,""],[128,"__S"],[134,""],[139,"T"],[145,"U,T"],[151,"U"],[157,""],[163,"V"],[169,""],[175,"T"],[183,""],[186,"T"],[188,""],[190,"__D"],[192,""],[199,"T"],[203,""],[210,"__H"],[212,""],[216,"U"],[220,""],[226,"T"],[227,""],[228,"__S"],[231,""],[234,"T"],[236,"U,T"],[240,"U"],[244,""],[248,"V"],[253,"T"],[256,""],[257,"U"],[258,""],[264,"U,T"],[265,"U"],[266,""],[268,"V"],[270,"T"],[273,"U"],[274,""],[280,"U,T"],[281,"U"],[282,""],[283,"V"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7497]}